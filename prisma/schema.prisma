// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  userName     String
  verified     Boolean        @default(false)
  accounts     Account[]
  posts        Post[]
  likes        Like[]
  comments     Comment[]
  VerifiedUser VerifiedUser[]
}

model Account {
  id          Int    @id @default(autoincrement())
  userId      Int
  accountName String
  user        User   @relation(fields: [userId], references: [id])
}

model Post {
  id        Int       @id @default(autoincrement())
  userId    Int
  content   String
  timestamp DateTime  @default(now())
  user      User      @relation(fields: [userId], references: [id])
  likes     Like[]
  comments  Comment[]
  imageUrl  String
}

model Like {
  id        Int      @id @default(autoincrement())
  userId    Int
  postId    Int
  timestamp DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
}

model Comment {
  id        Int      @id @default(autoincrement())
  userId    Int
  postId    Int
  content   String
  timestamp DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
}

// Optional: Table for Verified Users
model VerifiedUser {
  userId Int  @id
  user   User @relation(fields: [userId], references: [id])
}
